services:
  php-fpm:
    build:
      context: ./back-end/app
      dockerfile: ../Dockerfile
    container_name: ecoride-php-fpm
    environment:
      APP_ENV: dev
      APP_SECRET: ChangeMe123
      APP_TRUSTED_HOSTS: ".*"
      DATABASE_URL: "mysql://anastasia:OneLove24!@mysql_db:3306/ecoride?serverVersion=8.0&charset=utf8mb4"
      # Ajout de authSource=admin pour que l'authentification root fonctionne
      MONGODB_URL: "mongodb://mongo_user:mongo_password@mongo:27017/ecoride_mongo?authSource=admin"
      JWT_SECRET_KEY: "/var/www/html/config/jwt/private.pem"
      JWT_PUBLIC_KEY: "/var/www/html/config/jwt/public.pem"
      JWT_PASSPHRASE: "OneLove24!"
    volumes:
      - ./back-end/app:/var/www/html:cached
      - php_var:/var/www/html/var
      - php_vendor:/var/www/html/vendor
    depends_on:
      - mysql_db
      - mongo
    restart: unless-stopped

  nginx-backend:
    image: nginx:alpine
    container_name: ecoride-nginx-backend
    ports:
      - "8000:80" # Backend Symfony accessible sur http://localhost:8000
    volumes:
      - ./back-end/app:/var/www/html:cached
      - ./back-end/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php-fpm
    restart: unless-stopped

  mysql_db:
    image: mysql:8.0
    container_name: ecoride-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ecoride
      MYSQL_USER: anastasia
      MYSQL_PASSWORD: OneLove24!
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped

  mongo:
    image: mongo:6.0
    container_name: ecoride-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  mongo_express:
    image: mongo-express:1.0.0
    container_name: ecoride-mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user       # utilisateur Mongo root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_password   # mot de passe Mongo root
      ME_CONFIG_MONGODB_SERVER: mongo                   # service Mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin               # login interface web
      ME_CONFIG_BASICAUTH_PASSWORD: admin123           # mot de passe interface web
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin            # base d'authentification root
    ports:
      - "8082:8081" # accessible sur http://localhost:8082
    depends_on:
      - mongo
    restart: unless-stopped

  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: ecoride-frontend
    ports:
      - "8080:80" # Front accessible sur http://localhost:8080
    depends_on:
      - nginx-backend
    restart: unless-stopped
    volumes:
      - ./front-end:/usr/share/nginx/html:cached
      - ./front-end/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ecoride-phpmyadmin
    environment:
      PMA_HOST: mysql_db
      PMA_USER: anastasia
      PMA_PASSWORD: OneLove24!
    ports:
      - "8081:80" # PhpMyAdmin sur http://localhost:8081
    depends_on:
      - mysql_db
    restart: unless-stopped

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  mysql_data:
  mongo_data:
  php_var:
  php_vendor:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
