services:
  # FRONT-END
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./front-end:/usr/share/nginx/html:ro
      - ./front-end/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend-nginx
    networks:
      - app

  # BACKEND PHP (Symfony)
  backend-php:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    volumes:
      - ./back-end/app:/var/www/html
    environment:
      APP_ENV: dev
    networks:
      - app

  # BACKEND NGINX
  backend-nginx:
    image: nginx:alpine
    volumes:
      - ./back-end/app:/var/www/html:ro
      - ./back-end/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8081:80"
    depends_on:
      - backend-php
    networks:
      - app

  # BASE DE DONNÉES RELATIONNELLE (MySQL)
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ecoride
      MYSQL_USER: anastasia
      MYSQL_PASSWORD: OneLove24!
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app

  # PHPMYADMIN
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: myadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - "8082:80"
    depends_on:
      - db
    networks:
      - app

  # BASE DE DONNÉES NON RELATIONNELLE (MongoDB)
  mongo:
    image: mongo:6.0
    container_name: ecoride_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app

  # INTERFACE WEB POUR MONGODB (Mongo Express)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: ecoride_mongo_express
    restart: always
    ports:
      - "8083:8081" # accès via http://localhost:8083
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_password
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  db_data:
  mongo_data:
